name: Deploy Image to Amazon ECR

on:
  workflows: ["Build Cuttle-Next Image"]
  # Allows you to run this workflow manually from the Actions tab
  types:
    - completed

permissions:
  id-token: write
  contents: read

jobs:
  deploy-cuttle-next:
    if: ${{ github.ref == 'refs/heads/main' }} # only deploy when building main
    name: Deploy CuttleNext Image 
    runs-on: ubuntu-latest
    needs: build-cuttle-next
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@@v4
        with:
          name: cuttle-next-$GITHUB_SHA
      - name: Load Docker image
        run: docker -i $GITHUB_WORKSPACE/cuttle-next-image.tar load 
      - name: Setup AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{vars.AWS_REGION}}
      - name: Login to Amazon ECR
        id: login-pf-aws-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Tag Docker image
        env:
          REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
          REPOSITORY: cuttlenet/cuttle-next
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag ${{ vars.AWS_ECR_REPO }}:$GITHUB_SHA \
          $REGISTRY/${{ vars.AWS_ECR_REPO }}:$IMAGE_TAG
      - name: Push Docker image to ECR
        env:
          IMAGE_TAG: ${{ github.sha }}
          REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
        run: docker push $REGISTRY/${{ vars.AWS_ECR_REPO }}:$IMAGE_TAG
